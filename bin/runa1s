#! /bin/csh -f
#
#  $ADMIT/bin/runa1s
#
#  process a few ALMA projects with a super simplified interface 
#  that will automagically detect it's intent
#  - based on runa1, but only doing CubeStats
#  Has some historic knowledge of evolution of ALMA names...
#  This one assumes a fits cube, no continuum support (see runa2)
#
#  @todo
#  In working the longname.{cube,cont,mfs}.I.{pbcor,pb}.fits
#              is longname.cont.I.findcont.residual
#  but the {POL,FREQ} are in axis {2,3}, reversed from the normal order.

if ($?ADMIT == 0) then
    setenv ADMIT `admit_root`
endif

set a = $ADMIT/admit/test/admit1s.py

set sysname = `uname -s`      # needed until casapy doesn't hang children with parents

set nb = $#argv
set ib = 0

foreach base ($*)
  @ ib++
  echo "### ($ib/$nb) : processing $base"

  # case 00: another case TBD
  #
  set im = $base.pbcor.fits
  set pb = $base.flux.fits
  set log = $base.log
  if (-e $im && -e $pb) then
    listfitsa $im
    echo $a  --pb $pb --basename x $im
    if ($sysname == Darwin) exec $a  --pb $pb --basename x $im >& $log
    time $a  --pb $pb --basename x $im >& $log
    echo Logfile: $log
    continue
  endif

  # case 0: the apparent default of the pipeline
  #         longname.{cube,cont,mfs}.I.{pbcor,pb}.fits
  #         <---    basename   ---->
  #         but also catch when basename is full
  set im = $base.pbcor.fits
  set pb = $base.pb.fits
  set log = $base.log
  if (-e $im && -e $pb) then
    listfitsa $im
    echo $a  --pb $pb --basename x $im
    if ($sysname == Darwin) exec $a  --pb $pb --basename x $im >& $log
    time $a  --pb $pb --basename x $im >& $log
    echo Logfile: $log
    continue
  endif

  
  # case 1: basename meant to find (flux flat) image and pb file to get it noise flat
  set im = $base.image.pbcor.fits
  set pb = $base.flux.fits
  set log = $base.log

  if (-e $im && -e $pb) then
    listfitsa $im
    echo $a  --pb $pb --basename x $im
    if ($sysname == Darwin) exec $a  --pb $pb --basename x $im >& $log
    time $a  --pb $pb --basename x $im >& $log
    echo Logfile: $log
    continue
  endif

  # case 2: both noise flat and flux flat images, but pick the noise flat
  set nf = $base.image.fits
  set ff = $base.pbcor.fits
  set pb = $base.flux.fits
  set log = $base.log
  if (-e $nf && -e $ff && -e $pb) then
    listfitsa $nf
    echo $a  --basename x $nf
    if ($sysname == Darwin) exec $a  --basename x $nf >& $log
    time $a  --basename x $nf >& $log
    echo Logfile: $log
    continue
  endif

  # case 3: direct (noise flat) image
  set im = $base
  set log = $base.log
  if (-e $im) then
    listfitsa $im
    echo $a --basename x $im
    if ($sysname == Darwin) exec $a --basename x $im >& $log
    time $a --basename x $im >& $log
    echo Logfile: $log
    continue
  endif


  if (! -e $base) then
      echo No method to parse $base and $base does not exist
  else
      echo No method to parse $base
  endif
end
